package io.blockchaingroup.vc.virtualcurrencytransfer.usercontroller;

import org.springframework.web.bind.annotation.RestController;

import io.blockchaingroup.vc.virtualcurrencytransfer.dao.UserDaoService;
import io.blockchaingroup.vc.virtualcurrencytransfer.exception.UserNotFoundException;
import io.blockchaingroup.vc.virtualcurrencytransfer.model.User;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.http.ResponseEntity;

import java.util.List;
import java.net.URI;
import org.springframework.beans.factory.annotation.Autowired;

@RestController
public class UserResource {

	@Autowired
	private UserDaoService service;

	@GetMapping("/users")
	public List<User> retrieveAllUsers() {
		return service.findAll();
	}

	@GetMapping("/users/{id}")
	public User retrieveUser(@PathVariable int id) {
		User user = service.findOne(id);

		if(user==null)
			throw new UserNotFoundException("User with id: \'"+ id + "\' is not existed.");


		return user;
	}

	@PostMapping("/users")
	public ResponseEntity<Object> createUser(@RequestBody User user) {
		User savedUser = service.save(user);

		URI location = ServletUriComponentsBuilder
				.fromCurrentRequest()
				.path("/{id}")
				.buildAndExpand(savedUser.getId()).toUri();

		return ResponseEntity.created(location).build();

	}


}
